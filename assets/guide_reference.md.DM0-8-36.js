import{_ as a,c as e,o as s,a1 as i}from"./chunks/framework.DI6C9ZQo.js";const E=JSON.parse('{"title":"Reference","description":"","frontmatter":{},"headers":[],"relativePath":"guide/reference.md","filePath":"guide/reference.md"}'),t={name:"guide/reference.md"},h=i(`<h1 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h1><p>Welcome to the API Reference for Recaptcha Cracker. This section provides detailed information about the classes and methods available in the Recaptcha Cracker library.</p><h2 id="recaptchav2" tabindex="-1">RecaptchaV2 <a class="header-anchor" href="#recaptchav2" aria-label="Permalink to &quot;RecaptchaV2&quot;">​</a></h2><h3 id="class-recaptchav2" tabindex="-1">Class: <code>RecaptchaV2</code> <a class="header-anchor" href="#class-recaptchav2" aria-label="Permalink to &quot;Class: \`RecaptchaV2\`&quot;">​</a></h3><p>A class designed to handle the resolution of reCAPTCHA v2 challenges using audio transcription.</p><h4 id="initialization" tabindex="-1">Initialization <a class="header-anchor" href="#initialization" aria-label="Permalink to &quot;Initialization&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RecaptchaV2(driver)</span></span></code></pre></div><ul><li><code>driver</code> (SeleniumBase Driver): A SeleniumBase Driver object used to interact with the web page.</li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><p><code>cracker(selector: str, max_attempts: int = 3) -&gt; bool</code></p><p>Attempts to resolve a reCAPTCHA v2 challenge on the web page.</p><ul><li><p><code>selector</code> (str): The XPath selector for the reCAPTCHA iframe element.</p></li><li><p><code>max_attempts</code> (int, optional): The maximum number of attempts to solve the captcha. Default is 3.</p></li></ul><p>Returns: <code>bool</code> - <code>True</code> if the reCAPTCHA is successfully resolved, otherwise <code>False</code>.</p><h3 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> seleniumbase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Driver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> recaptcha_cracker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RecaptchaV2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Driver()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.google.com/recaptcha/api2/demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">recaptcha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RecaptchaV2(driver)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_solved </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> recaptcha.cracker(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">selector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;//*[@id=&quot;recaptcha-demo&quot;]/div/div/iframe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="textcaptcha" tabindex="-1">TextCaptcha <a class="header-anchor" href="#textcaptcha" aria-label="Permalink to &quot;TextCaptcha&quot;">​</a></h2><h3 id="class-textcaptcha" tabindex="-1">Class: <code>TextCaptcha</code> <a class="header-anchor" href="#class-textcaptcha" aria-label="Permalink to &quot;Class: \`TextCaptcha\`&quot;">​</a></h3><p>A class designed to handle the resolution of text captchas using EasyOCR and OpenCV.</p><h4 id="initialization-1" tabindex="-1">Initialization <a class="header-anchor" href="#initialization-1" aria-label="Permalink to &quot;Initialization&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TextCaptcha(image_path: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;captcha.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, processing: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kernel: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), verbose: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><p><code>image_path</code> (str, optional): The path to the captcha image. Default is &#39;captcha.png&#39;.</p></li><li><p><code>processing</code> (bool, optional): Whether to perform image processing on the captcha image. Default is True.</p></li><li><p><code>kernel</code> (tuple, optional): The kernel size for image processing. Default is (2, 2).</p></li><li><p><code>verbose</code> (bool, optional): Whether to print verbose output. Default is True.</p></li></ul><h3 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><p><code>download_and_read_image(url: str) -&gt; Optional[str]</code></p><p>Downloads a captcha image from a URL and reads its text.</p><ul><li><code>url</code> (str): The URL of the captcha image.</li></ul><p>Returns: <code>Optional[str]</code> - The decoded text from the captcha image or <code>None</code> if an error occurs.</p><p><code>decode_and_read_image(base64_image: str) -&gt; Optional[str]</code></p><p>Decodes a base64 encoded captcha image and reads its text.</p><p><code>base64_image</code> (str): The base64 encoded captcha image.</p><p>Returns: <code>Optional[str] </code>- The decoded text from the captcha image or <code>None</code> if an error occurs.</p><p><code>capture_and_read_image(driver, element: str) -&gt; Optional[str]</code></p><p>Captures a captcha image from a web page element and reads its text.</p><ul><li><code>driver</code> (SeleniumBase Driver): A SeleniumBase Driver object used to interact with the web page.</li></ul><p><code>element</code> (str): The XPath selector for the captcha image element.</p><p>Returns: <code>Optional[str]</code> - The decoded text from the captcha image or None if an error occurs.</p><h3 id="example-usage-1" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage-1" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> seleniumbase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Driver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> recaptcha_cracker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TextCaptcha</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Driver()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text_captcha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TextCaptcha()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">captcha_text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text_captcha.capture_and_read_image(driver, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">element</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;//img[@id=&quot;captcha_image&quot;]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><p>This reference covers the core functionalities of Recaptcha Cracker, providing detailed descriptions of the classes and methods available. For more examples and advanced usage, please refer to the Guides section.</p>`,39),n=[h];function l(p,r,o,c,d,k){return s(),e("div",null,n)}const u=a(t,[["render",l]]);export{E as __pageData,u as default};
